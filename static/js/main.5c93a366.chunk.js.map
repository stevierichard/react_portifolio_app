{"version":3,"sources":["components/Nav/Nav.js","components/Pages/Home.js","components/Pages/Portfolio.js","components/Pages/Contact.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","backgroundColor","title","navlink","color","Nav","classes","AppBar","position","Toolbar","Typography","className","to","Button","Copyright","variant","align","Date","getFullYear","maxWidth","media","height","maxHeight","footer","palette","background","paper","padding","spacing","icon","marginRight","heroContent","heroButtons","marginTop","cardGrid","paddingTop","paddingBottom","card","display","flexDirection","cardMedia","cardContent","container","justifyContent","alignItems","minHeight","Home","Fragment","Container","Card","CardActionArea","CardMedia","image","CardContent","gutterBottom","component","AutoPlaySwipeableViews","autoPlay","SwipeableViews","tutorialSteps","label","imgPath","header","paddingLeft","default","img","overflow","width","Portfolio","useTheme","React","useState","activeStep","setActiveStep","maxSteps","length","Paper","square","elevation","axis","direction","index","onChangeIndex","step","enableMouseEvents","map","key","Math","abs","src","alt","MobileStepper","steps","nextButton","size","onClick","prevActiveStep","disabled","backButton","CardActions","href","bullet","margin","transform","fontSize","marginBottom","pos","Contact","List","aria-label","ListItem","ListItemText","primary","Divider","divider","light","App","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.5c93a366.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { AppBar, Typography, Toolbar, Button } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport { Link } from \"react-router-dom\";\r\n// import \"./style\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    backgroundColor: \"black\",\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  navlink: {\r\n    color: \"#fff\",\r\n  },\r\n}));\r\n\r\nconst Nav = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <Typography className={classes.title}>Steven Simon</Typography>\r\n\r\n          <Link to=\"/about\" className=\"navlinkcss\">\r\n            <Button className={classes.navlink}>About</Button>\r\n          </Link>\r\n\r\n          <Link to=\"/portfolio\" className=\"navlinkcss\">\r\n            <Button className={classes.navlink}>Portfolio</Button>\r\n          </Link>\r\n          <Link to=\"/contact\" className=\"navlinkcss\">\r\n            <Button className={classes.navlink}>Contact</Button>\r\n          </Link>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Nav;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\n// import CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\n// import Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Container from \"@material-ui/core/Container\";\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright © \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: \"default\",\r\n  },\r\n  media: {\r\n    height: \"70vh\",\r\n    maxWidth: \"500px\",\r\n    maxHeight: \"500px\",\r\n  },\r\n  footer: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    padding: theme.spacing(6),\r\n  },\r\n  icon: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  heroContent: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    padding: theme.spacing(8, 0, 6),\r\n  },\r\n  heroButtons: {\r\n    marginTop: theme.spacing(4),\r\n  },\r\n  cardGrid: {\r\n    paddingTop: theme.spacing(8),\r\n    paddingBottom: theme.spacing(8),\r\n  },\r\n  card: {\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n  cardMedia: {\r\n    paddingTop: \"56.25%\", // 16:9\r\n  },\r\n  cardContent: {\r\n    flexGrow: 1,\r\n  },\r\n  container: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    minHeight: \"100vh\",\r\n  },\r\n}));\r\n\r\nconst Home = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <React.Fragment>\r\n      <Container className={classes.container}>\r\n        <Card className={classes.root}>\r\n          <CardActionArea>\r\n            <CardMedia\r\n              className={classes.media}\r\n              image=\"./images/office img.jpg\"\r\n              title=\"steven image\"\r\n            />\r\n            <CardContent>\r\n              <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                About\r\n              </Typography>\r\n              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                My name is Steven Simon, a Tanzania native born and raised, live\r\n                in California. I'm a graduate of College of Business Education\r\n                my major is business administration and management.I have a vast\r\n                experience in IT sales and management. My passion in solving\r\n                business problems and my love for programming have led me to\r\n                take this bootcamp course.\r\n              </Typography>\r\n            </CardContent>\r\n          </CardActionArea>\r\n        </Card>\r\n      </Container>\r\n      <footer className={classes.footer}>\r\n        <Typography variant=\"h6\" align=\"center\" gutterBottom>\r\n          Developed By\r\n        </Typography>\r\n        <Typography\r\n          variant=\"subtitle1\"\r\n          align=\"center\"\r\n          color=\"textSecondary\"\r\n          component=\"p\"\r\n        >\r\n          Steven Richard Simon!\r\n        </Typography>\r\n        <Copyright />\r\n      </footer>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport MobileStepper from \"@material-ui/core/MobileStepper\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\r\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\r\nimport SwipeableViews from \"react-swipeable-views\";\r\nimport { autoPlay } from \"react-swipeable-views-utils\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright © \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst AutoPlaySwipeableViews = autoPlay(SwipeableViews);\r\n\r\nconst tutorialSteps = [\r\n  {\r\n    label: \"Stock Tracker App\",\r\n    imgPath: \"./images/StockTracker.jpg\",\r\n  },\r\n  {\r\n    label: \"Weather App\",\r\n    imgPath: \"./images/weather.jpg\",\r\n  },\r\n  {\r\n    label: \"Password Generator App\",\r\n    imgPath: \"./images/password_generator.jpg\",\r\n  },\r\n  {\r\n    label: \"Calender App\",\r\n    imgPath: \"./images/calender.jpg\",\r\n  },\r\n  {\r\n    label: \"Readme Code\",\r\n    imgPath: \"./images/readme.jpg\",\r\n  },\r\n];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: 400,\r\n    flexGrow: 1,\r\n  },\r\n  header: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    height: 50,\r\n    paddingLeft: theme.spacing(4),\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  img: {\r\n    height: \"50vh\",\r\n    display: \"block\",\r\n    maxWidth: 400,\r\n    overflow: \"hidden\",\r\n    width: \"100%\",\r\n  },\r\n  container: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    minHeight: \"100vh\",\r\n  },\r\n}));\r\n\r\nconst Portfolio = () => {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n  const maxSteps = tutorialSteps.length;\r\n  let url = \"https://github.com/stevierichard/StockTracker\";\r\n  let url1 = \"https://github.com/stevierichard/WeatherDashboard\";\r\n  let url2 = \"https://github.com/stevierichard/PasswordGenerator\";\r\n  let url3 = \"https://github.com/stevierichard/-DayPlanner\";\r\n  let url4 = \"https://github.com/stevierichard/readMeGenerator\";\r\n  let url5 = \"https://github.com/stevierichard/fitness_tracker\";\r\n\r\n  const handleNext = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n  };\r\n\r\n  const handleStepChange = (step) => {\r\n    setActiveStep(step);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Container className={classes.container}>\r\n        <div className={classes.root}>\r\n          <Paper square elevation={0} className={classes.header}>\r\n            <Typography>{tutorialSteps[activeStep].label}</Typography>\r\n          </Paper>\r\n          <AutoPlaySwipeableViews\r\n            axis={theme.direction === \"rtl\" ? \"x-reverse\" : \"x\"}\r\n            index={activeStep}\r\n            onChangeIndex={handleStepChange}\r\n            enableMouseEvents\r\n          >\r\n            {tutorialSteps.map((step, index) => (\r\n              <div key={step.label}>\r\n                {Math.abs(activeStep - index) <= 2 ? (\r\n                  <img\r\n                    className={classes.img}\r\n                    src={step.imgPath}\r\n                    alt={step.label}\r\n                  />\r\n                ) : null}\r\n              </div>\r\n            ))}\r\n          </AutoPlaySwipeableViews>\r\n          <MobileStepper\r\n            steps={maxSteps}\r\n            position=\"static\"\r\n            variant=\"text\"\r\n            activeStep={activeStep}\r\n            nextButton={\r\n              <Button\r\n                size=\"small\"\r\n                onClick={handleNext}\r\n                disabled={activeStep === maxSteps - 1}\r\n              >\r\n                Next\r\n                {theme.direction === \"rtl\" ? (\r\n                  <KeyboardArrowLeft />\r\n                ) : (\r\n                  <KeyboardArrowRight />\r\n                )}\r\n              </Button>\r\n            }\r\n            backButton={\r\n              <Button\r\n                size=\"small\"\r\n                onClick={handleBack}\r\n                disabled={activeStep === 0}\r\n              >\r\n                {theme.direction === \"rtl\" ? (\r\n                  <KeyboardArrowRight />\r\n                ) : (\r\n                  <KeyboardArrowLeft />\r\n                )}\r\n                Back\r\n              </Button>\r\n            }\r\n          />\r\n          <CardActions>\r\n            <Button variant=\"contained\" color=\"primary\" href={url}>\r\n              StockTracker\r\n            </Button>\r\n            <Button variant=\"contained\" color=\"primary\" href={url1}>\r\n              Weather\r\n            </Button>\r\n            <Button variant=\"contained\" color=\"primary\" href={url2}>\r\n              Password\r\n            </Button>\r\n          </CardActions>\r\n          <CardActions>\r\n            <Button variant=\"contained\" color=\"primary\" href={url3}>\r\n              Calender\r\n            </Button>\r\n            <Button variant=\"contained\" color=\"primary\" href={url4}>\r\n              ReadMe\r\n            </Button>\r\n            <Button variant=\"contained\" color=\"primary\" href={url5}>\r\n              fitnessTracker\r\n            </Button>\r\n          </CardActions>\r\n        </div>\r\n      </Container>\r\n      <footer className={classes.footer}>\r\n        <Typography variant=\"h6\" align=\"center\" gutterBottom>\r\n          Developed By\r\n        </Typography>\r\n        <Typography\r\n          variant=\"subtitle1\"\r\n          align=\"center\"\r\n          color=\"textSecondary\"\r\n          component=\"p\"\r\n        >\r\n          Steven Richard Simon!\r\n        </Typography>\r\n        <Copyright />\r\n      </footer>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Portfolio;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { useState } from \"react\";\r\nimport Container from \"@material-ui/core/Container\";\r\n\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright © \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    // minWidth: 275,\r\n    maxWidth: \"default\",\r\n    width: \"100%\",\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  bullet: {\r\n    display: \"inline-block\",\r\n    margin: \"0 2px\",\r\n    transform: \"scale(0.8)\",\r\n  },\r\n  title: {\r\n    fontSize: 25,\r\n    marginBottom: \".75rem\",\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n  media: {\r\n    height: \"70vh\",\r\n    maxWidth: \"500px\",\r\n    maxHeight: \"500px\",\r\n  },\r\n  footer: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    padding: theme.spacing(6),\r\n  },\r\n  icon: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  heroContent: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    padding: theme.spacing(8, 0, 6),\r\n  },\r\n  heroButtons: {\r\n    marginTop: theme.spacing(4),\r\n  },\r\n  cardGrid: {\r\n    paddingTop: theme.spacing(8),\r\n    paddingBottom: theme.spacing(8),\r\n  },\r\n  card: {\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n  cardMedia: {\r\n    paddingTop: \"56.25%\", // 16:9\r\n  },\r\n  cardContent: {\r\n    flexGrow: 1,\r\n  },\r\n  container: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    minHeight: \"100vh\",\r\n  },\r\n}));\r\n\r\nconst Contact = () => {\r\n  const classes = useStyles();\r\n  const [state, setState] = useState(true);\r\n  let url = \"https://www.linkedin.com/in/steven-richard-b2a42563\";\r\n  let url1 = \"https://github.com/stevierichard\";\r\n  let img = \"./images/resume.PDF\";\r\n  return (\r\n    <React.Fragment>\r\n      <Container className={classes.container}>\r\n        <Card className={classes.root}>\r\n          <CardContent>\r\n            <List\r\n              component=\"nav\"\r\n              className={classes.root}\r\n              aria-label=\"mailbox folders\"\r\n            >\r\n              <ListItem>\r\n                <ListItemText primary=\"Contact Info\" align=\"center\" />\r\n              </ListItem>\r\n              <Divider />\r\n              <ListItem divider>\r\n                <ListItemText primary=\"Steven Simon\" align=\"center\" />\r\n              </ListItem>\r\n              <ListItem>\r\n                <ListItemText\r\n                  primary=\"Email: stevierichard1@gmail.com\"\r\n                  align=\"center\"\r\n                />\r\n              </ListItem>\r\n              <Divider light />\r\n              <ListItem>\r\n                <ListItemText primary=\"Phone #: (415) 3084769\" align=\"center\" />\r\n              </ListItem>\r\n            </List>\r\n          </CardContent>\r\n          <CardActions>\r\n            <Button variant=\"contained\" color=\"primary\" href={url}>\r\n              Linkedin\r\n            </Button>\r\n            <Button variant=\"contained\" color=\"primary\" href={url1}>\r\n              Github\r\n            </Button>\r\n            <Button variant=\"contained\" color=\"primary\" href={img}>\r\n              My Resume\r\n            </Button>\r\n          </CardActions>\r\n        </Card>\r\n      </Container>\r\n      <footer className={classes.footer}>\r\n        <Typography variant=\"h6\" align=\"center\" gutterBottom>\r\n          Developed By\r\n        </Typography>\r\n        <Typography\r\n          variant=\"subtitle1\"\r\n          align=\"center\"\r\n          color=\"textSecondary\"\r\n          component=\"p\"\r\n        >\r\n          Steven Richard Simon!\r\n        </Typography>\r\n        <Copyright />\r\n      </footer>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Contact;\r\n","import React from \"react\";\n// import logo from './logo.svg';\nimport \"./App.css\";\nimport Nav from \"./components/Nav/Nav\";\nimport { BrowserRouter as Router, Link, Route, Switch } from \"react-router-dom\";\nimport Home from \"./components/Pages/Home\";\nimport Portfolio from \"./components/Pages/Portfolio\";\nimport Contact from \"./components/Pages/Contact\";\n\nfunction App() {\n  return (\n    <Router>\n      <Nav />\n      <Switch>\n        <Route exact path=\"/\" component={Home}></Route>\n        <Route exact path=\"/about\" component={Home}></Route>\n        <Route exact path=\"/portfolio\" component={Portfolio}></Route>\n        <Route exact path=\"/contact\" component={Contact}></Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}